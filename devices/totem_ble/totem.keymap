#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#define ZMK_POINTING_DEFAULT_MOVE_VAL 1250
#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define LAYER_BASE 0
#define LAYER_NAV 1
#define LAYER_NUM 2
#define LAYER_MEDIA 3
#define LAYER_FUN 4
#define LAYER_MOUSE 5
#define LAYER_GAME 6
&caps_word {
    continue-list = <UNDERSCORE BACKSPACE DELETE K_CANCEL>;
};

&sk {
    release-after-ms = <60000>; // tap layer key again to cancel (or wait 1 minute I guess)
    quick-release; // remove on press rather than release
};

/ {
  behaviors {
    u_bt_sel_0: u_bt_sel_0 {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = < &bt BT_SEL 0 >, < &bt_clr_0 >;
      mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    u_bt_sel_1: u_bt_sel_1 {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = < &bt BT_SEL 1 >, < &bt_clr_1 >;
      mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    u_bt_sel_2: u_bt_sel_2 {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = < &bt BT_SEL 2 >, < &bt_clr_2 >;
      mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    u_bt_sel_3: u_bt_sel_3 {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = < &bt BT_SEL 3 >, < &bt_clr_3 >;
      mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    u_bt_sel_4: u_bt_sel_4 {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = < &bt BT_SEL 4 >, < &bt_clr_4 >;
      mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    tln: tln {
      compatible = "zmk,behavior-toggle-layer";
      #binding-cells = <1>;
      display-name = "Toggle Layer On";
      toggle-mode = "on";
    };
    tlf: tlf {
      compatible = "zmk,behavior-toggle-layer";
      #binding-cells = <1>;
      display-name = "Toggle Layer Off";
      toggle-mode = "off";
    };
    mm_dotlpar: mm_dotlpar {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&kp DOT>, <&kp LPAR>;
      mods = <(MOD_LSFT)>;
    };
    u_out_tog: u_out_tog {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = < &out OUT_TOG >, < &out OUT_USB >;
      mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    u_caps_word: u_caps_word {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = < &caps_word >, <&kp CAPSLOCK>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    Base {
        bindings = <
              &kp Q  &kp W  &kp E    &kp R      &kp T          &kp Y       &kp U           &kp I      &kp O    &kp P                 
              &kp A  &kp S  &kp D    &kp F      &kp G          &kp H       &kp J           &kp K      &kp L    &kp SQT               
&kp K_CANCEL  &kp Z  &kp X  &kp C    &kp V      &kp B          &kp N       &kp M           &kp COMMA  &kp DOT  &kp FSLH  &kp K_CANCEL
                            &kp ESC  &kp SPACE  &mo LAYER_NAV  &kp LSHIFT  &smo LAYER_NUM  &kp BSPC                                  
        >;    
    };

    Nav {
        bindings = <
                &kp LS(TAB)  &kp TAB       &kp ENTER  &none         &mo LAYER_MEDIA  &none     &none      &none       &none      &none              
                &sk LSHIFT   &sk LEFT_ALT  &sk LCTRL  &sk LGUI      &mo LAYER_MOUSE  &kp LEFT  &kp DOWN   &kp UP      &kp RIGHT  &u_caps_word       
&tln LAYER_NUM  &none        &kp LA(X)     &kp LC(C)  &kp K_CANCEL  &none            &kp HOME  &kp PG_DN  &kp PG_UP   &kp END    &none         &none
                                           &trans     &trans        &none            &trans    &trans     &kp DELETE                                
        >;    
    };

    Num {
        bindings = <
                &kp LEFT_BRACKET  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp RIGHT_BRACKET  &mo LAYER_FUN  &kp TAB    &kp ESC    &kp BSPC      &kp DEL          
                &kp SEMICOLON     &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp EQUAL          &none          &sk LGUI   &sk LCTRL  &sk LEFT_ALT  &sk LSHIFT       
&tlf LAYER_NUM  &kp GRAVE         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp BACKSLASH      &none          &kp ENTER  &trans     &trans        &trans      &none
                                                &mm_dotlpar   &kp NUMBER_0  &kp MINUS          &trans         &kp SPACE  &trans                                    
        >;    
    };

    Media {
        bindings = <
       &none       &none     &none      &none     &none   &none        &none         &none         &none        &u_out_tog                  
       &sk LSHIFT  &sk LALT  &sk LCTRL  &sk LGUI  &none   &kp C_PREV   &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT   &none                       
&none  &none       &kp RALT  &none      &none     &none   &u_bt_sel_0  &u_bt_sel_1   &u_bt_sel_2   &u_bt_sel_3  &u_bt_sel_4  &tln LAYER_GAME
                             &none      &trans    &trans  &kp C_STOP   &kp C_PP      &kp C_MUTE                                             
        >;    
    };

    Fun {
        bindings = <
       &kp F12  &kp F7  &kp F8     &kp F9  &kp PSCRN        &none   &none     &none      &none     &none            
       &kp F11  &kp F4  &kp F5     &kp F6  &kp SLCK         &none   &sk LGUI  &sk LCTRL  &sk LALT  &sk LSHIFT       
&none  &kp F10  &kp F1  &kp F2     &kp F3  &kp PAUSE_BREAK  &none   &none     &none      &kp RALT  &none       &none
                        &kp K_APP  &trans  &trans           &trans  &trans    &none                                 
        >;    
    };

    Mouse {
        bindings = <
       &none       &none     &none      &none     &none  &none           &none           &none         &none            &none       
       &sk LSHIFT  &sk LALT  &sk LCTRL  &sk LGUI  &none  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &none       
&none  &none       &kp RALT  &none      &none     &none  &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &none  &none
                             &trans     &trans    &none  &mkp MB2        &mkp MB1        &mkp MB3                                   
        >;    
    };

    Game {
        bindings = <
          &kp TAB     &kp Q  &kp X    &kp E      &kp R          &kp K_CANCEL   &kp C_PP         &kp C_MUTE     &kp C_STOP  &kp LS(TAB)                 
          &kp LSHIFT  &kp A  &kp W    &kp D      &kp F          &kp C_PREV     &kp C_VOL_DN     &kp C_VOL_UP   &kp C_NEXT  &none                       
&kp LALT  &kp LCTRL   &kp Z  &kp S    &kp C      &kp V          &none          &kp ENTER        &none          &none       &none        &tlf LAYER_GAME
                             &kp ESC  &kp SPACE  &mo LAYER_NUM  &mo LAYER_NAV  &imo LAYER_GAME  &kp BACKSPACE                                          
        >;    
    };
  };

  macros {
  smo: smo {
      compatible = "zmk,behavior-macro-one-param";
      #binding-cells = <1>;
      wait-ms = <0>;
      tap-ms = <0>;
      bindings
        = <&macro_tap &kp K_CANCEL>
        , <&macro_param_1to1>
        , <&macro_press &mo MACRO_PLACEHOLDER>
        , <&macro_pause_for_release>
        , <&macro_param_1to1>
        , <&macro_release &mo MACRO_PLACEHOLDER>
        ;
  };
  imo: imo {
      compatible = "zmk,behavior-macro-one-param";
      #binding-cells = <1>;
      wait-ms = <0>;
      tap-ms = <0>;
      bindings
        = <&macro_param_1to1>
        , <&tlf MACRO_PLACEHOLDER>
        , <&macro_pause_for_release>
        , <&macro_param_1to1>
        , <&tln MACRO_PLACEHOLDER>
        ;
  };
  bt_clr_0: bt_clr_0 {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      wait-ms = <0>;
      bindings = < &bt BT_SEL 0 &bt BT_CLR >;
    };
  bt_clr_1: bt_clr_1 {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      wait-ms = <0>;
      bindings = < &bt BT_SEL 1 &bt BT_CLR >;
    };
  bt_clr_2: bt_clr_2 {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      wait-ms = <0>;
      bindings = < &bt BT_SEL 2 &bt BT_CLR >;
    };
  bt_clr_3: bt_clr_3 {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      wait-ms = <0>;
      bindings = < &bt BT_SEL 3 &bt BT_CLR >;
    };
  bt_clr_4: bt_clr_4 {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      wait-ms = <0>;
      bindings = < &bt BT_SEL 4 &bt BT_CLR >;
    };
  };

};